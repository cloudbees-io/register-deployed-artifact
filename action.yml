apiVersion: automation.cloudbees.io/v1alpha1
kind: action
name: 'Register deployed artifact'
description: 'Creates an artifact version association with the environment.'

inputs:
  artifact_id:
    description: 'The unique identifier of an artifact.'
    required: true
  target-environment:
    description: 'The environment where the deployment occurred.'
  labels:
    description: 'List of comma-separated labels.'

runs:
  using: composite
  steps:
    - id: registerDeployedArtifact
      name: Register Deployed Artifact
      uses: docker://esolang/jq:latest
      run: |
        # Create the payload JSON file
        echo '{ "runId": "'"$CLOUDBEES_RUN_ID"'", "runAttempt": "'"$CLOUDBEES_RUN_ATTEMPT"'",' > /tmp/payload.json 
        echo '"artifactId": "'"INPUT_ARTIFACT_ID"'" ' >> /tmp/payload.json

        # Add target-environment if provided
        if [ -n "$INPUT_TARGET_ENV" ]; 
        then
          echo ', "environment": "'"$INPUT_TARGET_ENV"'"' >> /tmp/payload.json
        fi
        
        if [ -n "$INPUT_LABELS" ]; 
        then
         # Convert labels to JSON array format
         formatted_labels=$(echo "$INPUT_LABELS" | sed -e 's/[][]//g' | awk -v RS=, -v ORS=, '{ gsub(/^[ \t\r\n]+|[ \t\r\n]+$/, "");  gsub(/\\"/, "\\\\\""); gsub(/"/, "\\\""); printf "\"%s\",", $0 }' | sed 's/,$//' | sed 's/^/[/; s/$/]/')
         echo ', "labels": '"$formatted_labels">> /tmp/payload.json
        fi
        echo ' }' >> /tmp/payload.json
        
        # Display the generated payload
        echo "Request payload:"
        python3 -m json.tool /tmp/payload.json
        
        # Make Platform API call to create artifact_info record
        response=$(curl --silent --show-error --fail-with-body \
          -X 'POST' "$URL/v3/deployments" \
          -H "Authorization: Bearer $JWT" \
          -H 'Content-Type: application/json' \
          --data-binary '@/tmp/payload.json') || command_failed=1
       
        # Check if the API call failed
        if [ ${command_failed:-0} -eq 1 ];
        then
          echo "Platform API call failed with error: '$response'"
          exit 1
        fi
        
        # If successful, show the response nicely
        echo ""
        echo "Platform API success response:"
        echo "$response" | python3 -m json.tool || echo "$response"
      env:
        JWT: ${{ cloudbees.api.token }}
        URL: ${{ cloudbees.api.url }}
        INPUT_ARTIFACT_ID: ${{ inputs.artifact_id }}
        INPUT_TARGET_ENV: ${{ inputs.target-environment }}
        INPUT_LABELS: ${{ inputs.labels }}
        CLOUDBEES_RUN_ID: ${{ cloudbees.run_id }}
        CLOUDBEES_RUN_ATTEMPT: ${{ cloudbees.run_attempt }}

